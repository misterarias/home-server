---
- name: Create Pihole directories
  become: true
  file:
    state: directory
    path: "{{ item }}"
    owner: 1000
    group: 1000
    mode: 0777
  loop:
    - "{{ pihole_folder }}"
    - "{{ pihole_folder }}/etc-pihole"

- name: Render pihole files
  template:
    src: "files/pihole/{{ item }}.j2"
    dest: "{{ pihole_folder }}/{{ item }}"
  loop:
    - docker-compose.yml
    - etc-pihole/custom.list
  register: pihole_files

# Disable port 53 in host so we can use pihole: https://github.com/pi-hole/docker-pi-hole/#running-pi-hole-docker
- name: Disable DNS port in host
  become: true
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regex: '.*DNSStubListener.*'
    line: DNSStubListener=no
  register: resolv_file

- name: Delete system resolv.conf
  when: resolv_file.changed
  become: true
  ansible.builtin.file:
    state: absent
    path: /etc/resolv.conf

- name: Symlink resolve file to systemd
  when: resolv_file.changed
  become: true
  ansible.builtin.file:
    state: link
    src: /etc/systemd/resolved.conf
    dest: /etc/resolv.conf

- name: Restart systemd-resolved
  when: resolv_file.changed
  become: true
  ansible.builtin.systemd:
    state: restarted
    name: systemd-resolved

- name: Get current status
  community.docker.docker_compose:
    project_src: "{{ pihole_folder }}"
    build: false
  register: output

- name: Stop previous pihole containers
  when: pihole_files.changed and output.services.pihole.pihole.state.running
  community.docker.docker_compose:
    project_src: "{{ pihole_folder }}"
    state: absent
  register: output

- name: Create and start services
  when: pihole_files.changed or output.changed
  community.docker.docker_compose:
    project_src: "{{ pihole_folder }}"
