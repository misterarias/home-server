---
version: "{{ docker_compose_version }}"

networks:
  {{ docker.network_name }}:
    external: true

services:
  prometheus:
    networks:
      - {{ docker.network_name }}
    image: prom/prometheus:v2.40.1
    container_name: prometheus
    volumes:
      - {{ stacks.o11y.services.prometheus.folder }}/etc:/etc/prometheus
      - {{ stacks.o11y.services.prometheus.folder }}/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.prometheus.rule: "Host(`{{ stacks.o11y.services.prometheus.url }}`)"
      traefik.http.services.prometheus.loadbalancer.server.port: {{ stacks.o11y.services.prometheus.service_port }}
      traefik.http.routers.prometheus.entrypoints: http

  nodeexporter:
    networks:
      - {{ docker.network_name }}
    image: prom/node-exporter:v1.4.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.nodeexporter.rule: "Host(`{{ stacks.o11y.services.nodeexporter.url }}`)"
      traefik.http.services.nodeexporter.loadbalancer.server.port: {{ stacks.o11y.services.nodeexporter.service_port }}
      traefik.http.routers.nodeexporter.entrypoints: http

  cadvisor:
    networks:
      - {{ docker.network_name }}
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.cadvisor.rule: "Host(`{{ stacks.o11y.services.cadvisor.url }}`)"
      traefik.http.services.cadvisor.loadbalancer.server.port: {{ stacks.o11y.services.cadvisor.service_port }}
      traefik.http.routers.cadvisor.entrypoints: http

  grafana:
    networks:
      - {{ docker.network_name }}
    image: grafana/grafana:9.2.4
    container_name: grafana
    volumes:
      - {{ stacks.o11y.services.grafana.folder }}/data:/var/lib/grafana
      - {{ stacks.o11y.services.grafana.folder }}/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - {{ stacks.o11y.services.grafana.folder }}/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.grafana.rule: "Host(`{{ stacks.o11y.services.grafana.url }}`)"
      traefik.http.services.grafana.loadbalancer.server.port: {{ stacks.o11y.services.grafana.service_port }}
      traefik.http.routers.grafana.entrypoints: http
