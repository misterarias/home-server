---
version: "{{ docker_compose_version }}"

networks:
  {{ docker.network_name }}:
    external: true

x-disabled:
  tdarr:
    networks:
      - {{ docker.network_name }}
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    environment:
      - PUID={{ docker.environment.PUID }}
      - PGID={{ docker.environment.PGID }}
      - TZ={{ docker.environment.TZ }}
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort={{ stacks.servarr.services.tdarr.server_service_port }}
      - webUIPort={{ stacks.servarr.services.tdarr.service_port }}
      - internalNode=true
      - nodeName=MyInternalNode
    volumes:
      - {{ stacks.servarr.services.tdarr.folder }}/server:/app/server
      - {{ stacks.servarr.services.tdarr.folder }}/configs:/app/configs
      - {{ stacks.servarr.services.tdarr.folder }}/logs:/app/logs
      - {{ stacks.servarr.services.tdarr.folder }}/transcode_cache:/temp
      - {{ shares.movies.mount_point }}:/data/movies
      - {{ shares.shows.mount_point }}:/data/shows
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.tdarr.rule: "Host(`{{ stacks.servarr.services.tdarr.url }}`)"
      traefik.http.services.tdarr.loadbalancer.server.port: {{ stacks.servarr.services.tdarr.service_port }}
      traefik.http.routers.tdarr.entrypoints: http

services:
  bazarr:
    networks:
      - {{ docker.network_name }}
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID={{ docker.environment.PUID }}
      - PGID={{ docker.environment.PGID }}
      - TZ={{ docker.environment.TZ }}
    volumes:
      - {{ stacks.servarr.services.bazarr.folder }}/config:/config
      - {{ shares.movies.mount_point }}:/data/movies
      - {{ shares.shows.mount_point }}:/data/shows
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.bazarr.rule: "Host(`{{ stacks.servarr.services.bazarr.url }}`)"
      traefik.http.services.bazarr.loadbalancer.server.port: {{ stacks.servarr.services.bazarr.service_port }}
      traefik.http.routers.bazarr.entrypoints: http

  radarr:
    networks:
      - {{ docker.network_name }}
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    volumes:
      - {{ stacks.servarr.services.radarr.folder }}/:/config
      - {{ shares.movies.mount_point }}:/data/movies
      #- {{ stacks.servarr.extra_folders[0] }}:/data/downloads
      - {{ shares.downloads.mount_point }}:/data/downloads
    environment:
      - PUID={{ docker.environment.PUID }}
      - PGID={{ docker.environment.PGID }}
      - TZ={{ docker.environment.TZ }}
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.radarr.rule: "Host(`{{ stacks.servarr.services.radarr.url }}`)"
      traefik.http.services.radarr.loadbalancer.server.port: {{ stacks.servarr.services.radarr.service_port }}
      traefik.http.routers.radarr.entrypoints: http

  prowlarr:
    networks:
      - {{ docker.network_name }}
    image: lscr.io/linuxserver/prowlarr:nightly
    container_name: prowlarr
    environment:
      - PUID={{ docker.environment.PUID }}
      - PGID={{ docker.environment.PGID }}
      - TZ={{ docker.environment.TZ }}
    restart: unless-stopped
    volumes:
      - {{ stacks.servarr.services.prowlarr.folder }}/:/config
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.prowlarr.rule: "Host(`{{ stacks.servarr.services.prowlarr.url }}`)"
      traefik.http.services.prowlarr.loadbalancer.server.port: {{ stacks.servarr.services.prowlarr.service_port }}
      traefik.http.routers.prowlarr.entrypoints: http

  downloaderr:
    networks:
      - {{ docker.network_name }}
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: downloaderr
    environment:
      - PUID={{ docker.environment.PUID }}
      - PGID={{ docker.environment.PGID }}
      - TZ={{ docker.environment.TZ }}
      - WEBUI_PORT={{ stacks.servarr.services.downloaderr.service_port }}
    volumes:
      - {{ stacks.servarr.services.downloaderr.folder }}/:/config
      - {{ shares.downloads.mount_point }}:/downloads
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.downloaderr.rule: "Host(`{{ stacks.servarr.services.downloaderr.url }}`)"
      traefik.http.services.downloaderr.loadbalancer.server.port: {{ stacks.servarr.services.downloaderr.service_port }}
      traefik.http.routers.downloaderr.entrypoints: http

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    networks:
      - {{ docker.network_name }}
    container_name: sonarr
    restart: unless-stopped
    volumes:
      - {{ stacks.servarr.services.sonarr.folder }}/:/config
      - {{ shares.shows.mount_point }}:/data/shows
      - {{ shares.downloads.mount_point }}:/data/downloads
    environment:
      - PUID={{ docker.environment.PUID }}
      - PGID={{ docker.environment.PGID }}
      - TZ={{ docker.environment.TZ }}
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.sonarr.rule: "Host(`{{ stacks.servarr.services.sonarr.url }}`)"
      traefik.http.services.sonarr.loadbalancer.server.port: {{ stacks.servarr.services.sonarr.service_port }}
      traefik.http.routers.sonarr.entrypoints: http

  heimdall:
    networks:
      - {{ docker.network_name }}
    dns:
      - {{ dns_container_ip }}
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    restart: unless-stopped
    volumes:
      - {{ stacks.servarr.services.heimdall.folder }}/:/config
    environment:
      - PUID={{ docker.environment.PUID }}
      - PGID={{ docker.environment.PGID }}
      - TZ={{ docker.environment.TZ }}
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: true
      traefik.http.routers.heimdall.rule: "Host(`{{ stacks.servarr.services.heimdall.url }}`)"
      traefik.http.services.heimdall.loadbalancer.server.port: {{ stacks.servarr.services.heimdall.service_port }}
      traefik.http.routers.heimdall.entrypoints: http


